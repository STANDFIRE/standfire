change log lidar.py
August, 2017
Reflects changes from standfire version 1.1.0a to 1.1.1a

-eliminated the use of the GDAL binary ogr2ogr.exe to make its functions platform
	neutral and speed up processing time.

- replaced the '_write_vrt_file' and 'spatial_join' methods from standfire ver 1.1.0a
	with 'copy_shapefile', 'cleanup_lidar_fields', 'fishnet_id' and 
	'cleanup_lidar_features' to facilitate the elimination of the ogr2ogr binary.

- modified the __init__ method to eliminate the definition of the path to ogr2ogr.exe

- modified spacing throughout the script to come in line with PEP recommendations

- deleted the addition of the 'Plot_ID' field from the 'add_attribute_fields' method.
	This field is now added and populated in the 'fishnet_id' method.

- eliminated the populating of the 'Plot_ID' field from the 'calculate_attributes'
	method for the reasons listed above.


change log lidar.py
September 14, 2017
Reflects changes from standfire version 1.1.1a to 1.1.2a

- added extensive error handling to the run_lidar method in 
	standfire_mini_interface and to all lidar processing methods in the
	ConvertLidar class of the lidar submodule. The methods in the
	ConvertLidar class now trap many types of errors and return error
	messages back to run_lidar. When a trapped error occurs, run_lidar halts
	the execution of the standfire simulation and prints the error message
	to the console. Successful processing also generates messages which are
	sent to the console when all the processes executed in run_lidar have
	successfully completed. See comments in the mini interface and lidar
	scripts for more information.

- Changed the create_fishnet method in the ConvertLidar class to no longer return the
	x and y dimensions of the fishnet as they are no longer needed in the main
	application.

